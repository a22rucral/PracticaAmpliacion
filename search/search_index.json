{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Practica Ampliaci\u00f3n.","text":""},{"location":"#configuracion-de-la-practica","title":"Configuraci\u00f3n de la pr\u00e1ctica","text":"<p>El objetivo de esta pr\u00e1ctica es configurar un servidor Nginx que utilice hosts virtuales para alojar m\u00faltiples sitios web en un solo servidor y que cada host virtual apunte al directorio public_html de distintos usuarios del sistema operativo Debian. De esta manera, cada usuario podr\u00e1 gestionar su propio sitio web desde su carpeta personal</p>"},{"location":"#documentacion","title":"Documentaci\u00f3n.","text":""},{"location":"#instalacion-nginx","title":"Instalaci\u00f3n Nginx","text":"<p>Primero actualizaremos la lista de paquetes en los repositorios del sistema y luego instalaremos las versiones m\u00e1s recientes con el siguiente comando. </p> <p></p> <p>Una vez actualizados instalaremos nginx con el siguiente comando.</p> <p></p> <p>Una vez instalado comprobaremos su estado para ver si est\u00e1 activo y funciona.</p> <p></p>"},{"location":"#creacion-usuarios-del-sistema","title":"Creaci\u00f3n usuarios del sistema.","text":"<p>El siguiente paso ser\u00e1 a\u00f1adir los usuarios al sistema operativo. Con los comandos </p> <pre><code>sudo adduser &lt;nombre_usuario&gt;\n</code></pre> <p>Donde nos preguntar\u00e1n el nombre completo, n\u00famero de habitaci\u00f3n, telefono propio, telefono fijo y confirmaci\u00f3n de informaci\u00f3n. Para est\u00e9 caso, como los usuarios no transcienden m\u00e1s que del \u00e1mbito de la pr\u00e1ctica solo he puesto nombre. </p> <p></p>"},{"location":"#estructura-de-carpetas-y-archivos","title":"Estructura de carpetas y archivos.","text":"<p>Una vez ya creados, crearemos la carpeta public_html propia de cada usuario con el comando mkdir.</p> <p></p> <p>Con el siguiente comando indicamos que la carpeta public_html, su propietario ser\u00e1 el correspondiente usuario que la contenga asi como sus subdirectorios. Dandole completos permisos al propietario.</p> <p></p> <p>Crearemos respectivamente en cada carpeta public_html un breve index para informar de que la p\u00e1gina a la que accedemos es del usuario1 o usuario2.</p> <p></p> <p></p>"},{"location":"#configuracion-basica-de-nginx-y-creacion-de-host-virtuales","title":"Configuraci\u00f3n b\u00e1sica de Nginx y creaci\u00f3n de host virtuales.","text":"<p>A continuaci\u00f3n crearemos el siguiente archivo en la carpeta sites-avaliable con el siguiente comando. </p> <pre><code>sudo nano /etc/nginx/sites-avaliable/usuario1\n</code></pre> <p>Eso lo haremos tanto con el usuario1 como el usuario2.</p> <p>El siguiente archivo de configuraci\u00f3n indicamos que se escuchar\u00e1 con el puerto 80 y le asignamos el nombre usuario1.local. La ra\u00edz del servidor est\u00e1 configurada en el directorio /home/usuario1/public_html, donde se encuentran los archivos del sitio.  En el location se especifica el manejo de las solicitudes. </p> <p></p> <p>Una vez creados los sitios de configuraci\u00f3n tanto del usuario1 como del usuario2 crearemos el enlace simb\u00f3lico correspondiente a sites-enabled.</p> <p></p>"},{"location":"#https","title":"HTTPS","text":"<p>Ahora nos encargaremos de implementar la conexi\u00f3n segura mediante HTTPS. Con el siguiente comando genera un certificado SSL autofirmado  para poder hacer posible esta conexi\u00f3n. </p> <p></p> <p>Para terminar de implementarla tendremos que ajustar la configuraci\u00f3n de los archivos de nginx. </p> <p></p> <p>Terminamos de darle permisos a las carpetas para que el usuario www-data que es el que se encarga de ejecutar procesos web y a las carpetas para que pueda acceder. </p> <p></p> <p>Como resultado tenemos el siguiente. </p> <p></p> <p></p>"}]}